这个问题有多个版本

三个人

甲乙丙三个人身上贴着2，4，8三个数字，他们只能看见另外两个人身上的数字，他们知道三个人身上的数字构成等比数列，他们看不见自己身上的数字，按照甲乙丙的顺序让三个人依次回答问题：“do you know the number of you ?”，他们只能回答“确定”，“不确定”。
问谁最先知道自己身上的数字，谁最后知道自己身上的数字？
第一轮次：三人都没说话的时候
甲看见4、8，可行解为[16,2]，即（16，4，8）和（2，4，8）
乙看见2，8，可行解为[4,32]，即（2，4，8）和（2，32，8）
丙看见2，4，可行解为[1,8]，即（2，4，1）和（2，4，8）

第二轮次：甲必然说：不知道
乙会想，我想的这两个答案（2，4，8）和（2，32，8）都满足甲说的话
丙会想，我想的这两个答案（2，4，1）和（2，4，8）都满足甲说的话
所以这一轮基本上没有新鲜信息

第三轮次：乙必然说：不知道
甲会想，我这两个答案（16，4，8）和（2，4，8）都符合乙说的话
丙会想，（2，4，1）不符合乙说的话，因为甲为2，丙为1，乙只能为4；而现在乙却说自己不知道，这说明答案只能为（2，4，8），于是丙第一个知道三人身上的答案。

第三轮次：丙说：知道
甲会想....

如何编程描述这一过程？


两个人

甲乙两个人身上的数字形成等差数列，他们可以互相看见对方身上的数字。
甲说：不知道
乙说：我知道了
甲说：我也知道了
问，甲乙身上的数字分别是几？
A：1，2 B：2，3 C：3，4 D：4，5


不知道中的知道------信息从哪里来？

猜数字问题中，两个人谁都没有说出有意义的信息，却能够通过推理找到信息。

蓝眼人红眼人问题中，外来者仅仅说了一句话，就导致全岛居民都知道了自己眼睛的颜色。

系统中微小的信息输入引起了雪崩一样的现象。